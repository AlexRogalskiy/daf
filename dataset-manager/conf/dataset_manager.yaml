# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Dataset Manager API
  description: Api to perform the e-gestion of the dataset ingested in the DAF
  version: "1.0.0"
# the domain of the service
#host: api.uber.com
  contact:
    name: team digitale
    url: https://teamdigitale.governo.it
  license:
    name: Creative Commons 4.0 International
    url: http://creativecommons.org/licenses/by/4.0/
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths
basePath: /dataset-manager/v1
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
paths:
  /dataset/{datasetId}:
    get:
      summary: Get a Dataset ingested via "logical uri"/id
      description: |
        Get a Dataset ingested via "logical uri"/id
      operationId: getDataset
      security:
        - basicAuth: []
      produces:
        - application/json
      parameters:
        - name: datasetId
          in: path
          description: The logical uri of the dataset
          required: true
          type: string
          format: string
      tags:
        - Datasets
      responses:
        200:
          description: the first n records of the requested dataset
          schema:
            $ref: '#/definitions/DafDataset'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /dataset/{datasetId}/schema:
    get:
      summary: Get the schema of a Dataset ingested via "logical uri"/id
      description: |
        Get the schema of a Dataset ingested via "logical uri"/id
      operationId: getDatasetSchema
      security:
        - basicAuth: []
      produces:
        - application/json
      parameters:
        - name: datasetId
          in: path
          description: The logical uri of the dataset
          required: true
          type: string
          format: string
      tags:
        - Datasets
      responses:
        200:
          description: the first n records of the requested dataset
          schema:
            $ref: '#/definitions/DafDataset'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /dataset/{datasetId}/limit/{size}:
    get:
      summary: Get a Dataset ingested via logical uri/id
      description: |
        Get a Dataset ingested via logical uri/id
      security:
        - basicAuth: []
      operationId: getDatasetLimit
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: datasetId
          in: path
          description: The logical uri of the dataset
          required: true
          type: string
        - name: size
          in: path
          description: the number of records to fetch
          required: true
          type: integer
      tags:
        - Datasets
      responses:
        200:
          description: the first n records of the requested dataset
          schema:
            $ref: '#/definitions/DafDataset'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /dataset/{datasetId}/query:
    post:
      summary: Query a given dataset by applyng multiple filter, where, group conditions and limit the number of returned records
      description: |
        Query a given dataset by applyng multiple filter, where, group conditions and limit the number of returned records
      security:
        - basicAuth: []
      consumes:
        - application/json
      operationId: searchDataset
      produces:
        - application/json
      parameters:
        - name: datasetId
          in: path
          description: The logical uri of the dataset
          required: true
          type: string
        - in: body
          name: query
          description: the query to be executed
          required: true
          schema:
            $ref: '#/definitions/Query'
      tags:
        - Datasets
      responses:
        200:
          description: the first n records of the requested dataset
          schema:
            $ref: '#/definitions/DafDataset'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  DatasetSchema:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      columns:
        type: array
        items:
          $ref: '#/definitions/Column'
  Query:
    type: object
    properties:
      filter:
        type: array
        items:
          type: string
      where:
        type: array
        items:
          type: string
      group_by:
        $ref: '#/definitions/GroupBy'
      limit:
        type: integer
  GroupBy:
    type: object
    properties:
      groupColumn:
        type: string
      conditions:
        type: array
        items:
          $ref: '#/definitions/GroupCondition'
  GroupCondition:
    type: object
    properties:
      column:
        type: string
      aggrFunction:
        type: string
  DafDataset:
    type: object
    properties:
      datasetId:
        type: string
      columns:
        type: array
        items:
          $ref: '#/definitions/Column'
      rows:
        type: array
        items:
          type: string
  Column:
    type: object
    properties:
      name:
        type: string
      data_type:
        type: string
      description:
        type: string
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
