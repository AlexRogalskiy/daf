# Copyright 2017 TEAM PER LA TRASFORMAZIONE DIGITALE
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Questo e' la descrizione delle API che vengono esposte da dati.gov.it.
# Le API sono pubbliche

swagger: '2.0'
info:
  title: IoT Manager API
  description: IoT Manager API
  version: "BETA"
  termsOfService: http://termofservice
  contact:
    name: team digitale
    url: https://teamdigitale.governo.it
  license:
    name: Creative Commons 4.0 International
    url: http://creativecommons.org/licenses/by/4.0/
host: localhost:9000
# will be prefixed to all paths
basePath: /iot-manager/v1
# array of all schemes that your API supports
schemes:
  - http
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
paths:
  "/token":
    get:
      summary: Get Token
      description: |
        It returns the JWT token
      tags:
        - JWT Token
      operationId: token
      security:
        - basicAuth: []
      responses:
        200:
          description: The JWT token
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/addEntity":
    post:
      summary: Add new IoT Entities
      description: Insert one or more IoT entities (i.e. sensors) in Solr
      tags:
        - IoT
        - Entity
        - Sensor
      operationId: addEntity
      security:
        - basicAuth: []
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: entity
          in: body
          description: "IoT Entity data"
          required: true
          schema:
            $ref: "#/definitions/Entity"
      responses:
        200:
          description: Success
          schema:
            type: object
            $ref: "#/definitions/Success"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

definitions:
  Entity:
    properties:
      id:
        type: string
        description: IoT Entity ID
      name:
        type: string
        description: Name of the IoT Entity
      entity_type:
        type: string
        description: Type of the entity (i.e. sensor, parking, etc.)
      location_type:
        type: string
        description: Type of location, can be either fixed or mobile
      organization:
        type: string
        description: Organization that owns the entity (it maps with org defined in DAF)
      latitude:
        type: number
        format: double
        description: Latitude where the entity has been recorded for the last time
      longitude:
        type: number
        format: double
        description: Longitude where the entity has been recorded for the last time
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
