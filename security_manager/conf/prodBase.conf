# Copyright 2017 TEAM PER LA TRASFORMAZIONE DIGITALE
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.

#play.crypto.secret = "xxxxxx"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

play.modules.enabled += "it.gov.daf.common.modules.authentication.SecurityModule"
//play.http.filters     = "it.gov.daf.common.filters.FiltersSecurity"

#only in test environment!
play.ws.ssl.loose.acceptAnyCertificate="true"
play.ws.ssl.loose.allowWeakCiphers="true"

#TODO: to cancel???
play.filters.cors {
  allowedHttpMethods = ["GET", "POST", "HEAD", "DELETE", "PATCH", "OPTION"]
}

# minuti
cookie.expiration = 30
token.expiration = 480

#deve essere la stessa settata nel CKAN
default.organization="default_org"

#pac4j.jwt_secret = "123456789012345678901234567890123"
pac4j.security {
  rules = [
    {
      "/security-manager/v1/ipa/registration/.*" = {
        authorizers = "_anonymous_"
      }
    },
    {
      "/sso-manager/internal/.*" = {
        authorizers = "_anonymous_"
      }
    },
    {
      "/security-manager/v1/.*" = {
        authorizers = "_authenticated_"
        clients = "DirectBasicAuthClient, HeaderClient"
      }
    },
    {
      "/sso-manager/secured/.*" = {
        authorizers = "_authenticated_"
        clients = "DirectBasicAuthClient, HeaderClient"
      }
    }

  ]
}

sftp.host="edge1"

pac4j.authenticator = "ldap"
pac4j.ldap.url = "ldaps://idm.daf.gov.it:636"
pac4j.ldap.base_user_dn = "cn=users,cn=accounts,dc=daf,dc=gov,dc=it"
pac4j.ldap.login_attribute = "mail"
pac4j.ldap.username_attribute = "uid"
pac4j.ldap.bind_dn =  "uid=application,cn=users,cn=accounts,dc=daf,dc=gov,dc=it"
#pac4j.ldap.bind_pwd = "xxxxxx"


ipa {
  url = "https://idm.daf.gov.it"
  user = "admin"
#  userpwd = "xxxxxx"
}

smtp {
  server = "smtp.mailgun.org"
  port = 587
  login = "postmaster@teamdigitale.governo.it"
# pwd = "xxxxx"
  sender = "daf-noreply@teamdigitale.governo.it"
}

app.registration.url="https://dataportal-private.daf.teamdigitale.it/#/confirmregistration?t="

ckan{
  url = "http://ckan.default.svc.cluster.local:5000"
  adminUser="ckanadmin"
#  adminPwd="xxxxxx"
}


metabase.url= "https://graph.daf.teamdigitale.it"

superset{
  url="https://bi.daf.teamdigitale.it"
  adminUser="superset_admin"
#  adminPwd="xxxxxx"
  orgAdminRole="org-admin"
  dbUri="impala://slave1:21050"
}

jupyter.url="https://datascience.daf.teamdigitale.it"

grafana {
  url = "https://grafana.daf.teamdigitale.it"
  adminUser="admin"
#  adminPwd="xxxxx"
}

mongo {
  host = "ckan.default.svc.cluster.local"
  port = 27017
  database = "ckan"
  collection = "catalog_test"
  username = "ckan"
#  password = "xxxxxx"
}

